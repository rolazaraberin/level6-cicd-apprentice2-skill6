"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.removeLoginRelationalTables=exports.removeUserForeignKeyConstraints=exports.getUnusedTemporaryCredentials=exports.getUnusedCredentials=exports.getValidTemporaryCredentials=exports.getValidCredentials=void 0;const accountUtils_1=require("./accountUtils"),cartUtils_1=require("./cartUtils"),loginUtils_1=require("./loginUtils"),userUtils_1=require("./userUtils");async function getValidCredentials(){const email="correct@email.com",password="correct password";let data;try{data=await(0,loginUtils_1.loginWithPassword)(email,password)}catch(accountDoesNotExist){data=await(0,accountUtils_1.createAccountByPassword)(email,password)}const token=data.token,user=data.user,userId=user.id,cartID=undefined;return{email:email,password:password,cartID:user.cartID,token:token,user:user,userId:userId}}async function getUnusedCredentials(){const email="new@email.com",password="new password";try{let result=await(0,loginUtils_1.loginWithPassword)(email,password);result=await(0,accountUtils_1.deleteAccountByPassword)(email,password)}catch(credentialsAvailable){}return{email:email,password:password}}async function getUnusedTemporaryCredentials(){const email="temporary@email.com",password="temporary";try{let result=await(0,loginUtils_1.loginWithPassword)(email,password);result=await(0,accountUtils_1.deleteAccountByPassword)(email,password)}catch(credentialsAvailable){}return{email:email,password:password}}async function getValidTemporaryCredentials(){const email="temporary@email.com",password="temporary";let data;try{data=await(0,loginUtils_1.loginWithPassword)(email,password)}catch(accountDoesNotExist){data=await(0,accountUtils_1.createAccountByPassword)(email,password)}const user=data.user,userId=null==user?void 0:user.id,cartID=null==user?void 0:user.cartID,token=data.token;return{email:email,password:password,cartID:cartID,userId:userId,user:user}}async function removeUserForeignKeyConstraints(user){await(0,cartUtils_1.deleteCartById)(user.cartID),await(0,loginUtils_1.deleteLoginByEmail)(user.email)}async function removeLoginRelationalTables(user){await(0,cartUtils_1.deleteCartById)(user.cartID),await(0,userUtils_1.deleteUserById)(user.id)}exports.getValidCredentials=getValidCredentials,exports.getUnusedCredentials=getUnusedCredentials,exports.getUnusedTemporaryCredentials=getUnusedTemporaryCredentials,exports.getValidTemporaryCredentials=getValidTemporaryCredentials,exports.removeUserForeignKeyConstraints=removeUserForeignKeyConstraints,exports.removeLoginRelationalTables=removeLoginRelationalTables;