"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const itemUtils_1=require("./itemUtils");async function getId(){const id=2,item=await(0,itemUtils_1.getItemById)(2),itemId=Number(item.id);expect(itemId).toBe(2),expect(item).toHaveProperty("name"),expect(item).toHaveProperty("price"),expect(item).toHaveProperty("description")}async function noId(){let id,result;id=void 0,result=(0,itemUtils_1.getItemById)(id),await expect(result).rejects.toBeDefined(),id=null,result=(0,itemUtils_1.getItemById)(id),await expect(result).rejects.toBeDefined(),id="",result=(0,itemUtils_1.getItemById)(id),await expect(result).rejects.toBeDefined(),id={},result=(0,itemUtils_1.getItemById)(id),await expect(result).rejects.toBeDefined(),id=[],result=(0,itemUtils_1.getItemById)(id),await expect(result).rejects.toBeDefined()}async function objectId(){let id,result;id={},result=(0,itemUtils_1.getItemById)(id),await expect(result).rejects.toBeDefined(),id={id:2},result=(0,itemUtils_1.getItemById)(id),await expect(result).rejects.toBeDefined()}async function arrayId(){let id,result;id=[],result=(0,itemUtils_1.getItemById)(id),await expect(result).rejects.toBeDefined(),id=[2],result=(0,itemUtils_1.getItemById)(id),await expect(result).rejects.toBeDefined()}jest.setTimeout(2500),describe("getItemById()",(()=>{test("Given an id, it returns an item",getId),test("Given no id, it throws an error",noId),test("Given an object, it throws an error",objectId),test("Given an array, it throws an error",arrayId)}));