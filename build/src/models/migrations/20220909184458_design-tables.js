"use strict";async function up(table){return await table.schema.createTable("item",(function(column){column.increments("id").primary().notNullable(),column.string("name"),column.float("price"),column.string("image"),column.string("description")})).raw("CREATE INDEX itemIndex ON item ( name, description, price )").raw('CREATE TABLE "cart" (\n      "id" INTEGER,\n      "itemsTable" TEXT,\n      "totalQuantity" INTEGER,\n      "totalPrice" INTEGER,\n      PRIMARY KEY ("id")\n      );').raw('CREATE TABLE "cartItems1" (\n      "id" INTEGER,\n      "itemID" INTEGER,\n      "quantity" INTEGER,\n      "subtotal" INTEGER,\n      PRIMARY KEY ("id"),\n      FOREIGN KEY ("id") REFERENCES item("id")\n    );').createTable("cartItems2",(function(column){column.integer("id").primary().notNullable(),column.integer("itemID"),column.integer("quantity"),column.integer("subtotal"),column.foreign("id"),column.foreign("itemID")})).createTable("inventory",(function(column){column.increments("id").primary().notNullable(),column.string("itemsTable"),column.integer("totalQuantity"),column.integer("totalPrice"),column.foreign("itemsTable")})).createTable("inventoryItems",(function(column){column.integer("id").primary().notNullable(),column.integer("itemID"),column.integer("quantity"),column.integer("subtotal"),column.foreign("id"),column.foreign("itemID")}))}async function down(table){return table.schema.dropTable("cart").dropTable("cartItems1").dropTable("cartItems2").dropTable("item").dropTable("inventory").dropTable("inventoryItems")}Object.defineProperty(exports,"__esModule",{value:!0}),exports.down=exports.up=void 0,exports.up=up,exports.down=down;