"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const database_1=require("../database"),knexUtils_1=require("../../utils/knexUtils");async function migration(){await(0,knexUtils_1.createTable)("item",itemTable),await(0,knexUtils_1.createIndexRaw)(ITEM_INDEX),await(0,knexUtils_1.createTableRaw)(CART_TABLE),await(0,knexUtils_1.createTableRaw)(CART_ITEMS_1_TABLE),await(0,knexUtils_1.createTable)("cartItems2",cartItems2Table),await(0,knexUtils_1.createTable)("inventory",inventoryTable),await(0,knexUtils_1.createTable)("inventoryItems",inventoryItemsTable),await(0,knexUtils_1.closeConnection)()}function itemTable(column){column.increments("id").primary().notNullable(),column.string("name"),column.float("price"),column.string("image"),column.string("description")}function cartItems2Table(column){column.integer("id").primary().notNullable(),column.integer("itemID"),column.integer("quantity"),column.integer("subtotal"),column.foreign("id"),column.foreign("itemID")}function inventoryTable(column){column.increments("id").primary().notNullable(),column.string("itemsTable"),column.integer("totalQuantity"),column.integer("totalPrice"),column.foreign("itemsTable")}function inventoryItemsTable(column){column.integer("id").primary().notNullable(),column.integer("itemID"),column.integer("quantity"),column.integer("subtotal"),column.foreign("id"),column.foreign("itemID")}(0,knexUtils_1.initialize)(database_1.knex),migration();const CART_TABLE='CREATE TABLE "cart" (\n  "id" INTEGER,\n  "itemsTable" TEXT,\n  "totalQuantity" INTEGER,\n  "totalPrice" INTEGER,\n  PRIMARY KEY ("id")\n);',CART_ITEMS_1_TABLE='CREATE TABLE "cartItems1" (\n  "id" INTEGER,\n  "itemID" INTEGER,\n  "quantity" INTEGER,\n  "subtotal" INTEGER,\n  PRIMARY KEY ("id"),\n  FOREIGN KEY ("id") REFERENCES item("id")\n);',ITEM_INDEX="CREATE INDEX itemIndex ON item ( name, description, price )";