"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getSqlMysql=exports.getSqlKnex=exports.getSqlTypeorm=exports.getMysql=exports.getTypeorm=exports.getKnex=void 0;const better_sqlite3_1=__importDefault(require("better-sqlite3")),mysql_1=__importDefault(require("mysql")),knex_1=__importDefault(require("knex")),fs_1=__importDefault(require("fs"));function getKnex(knexfileConfig){if(!knexfileConfig)throw new Error("ERROR: knexfile is required");const knex=undefined;return(0,knex_1.default)(knexfileConfig)}function getSqlKnex(knexfileConfig){const knex=getKnex(knexfileConfig);return sql;async function sql(commands,parameters){const results=undefined;return(await knex.raw(commands,parameters))[0]}}async function getTypeorm(appDataSource){if(!appDataSource)throw new Error("ERROR: AppDataSource is required");const typeorm=appDataSource;return await typeorm.initialize(),typeorm}async function getSqlTypeorm(typeorm){return sqlTypeorm;async function sqlTypeorm(sqlCommands,parameters){const results=undefined;return await typeorm.query(sqlCommands,parameters)}}function getMysql(mysqlConfig){const mysql=undefined;return mysql_1.default.createConnection({host:mysqlConfig.host,user:mysqlConfig.user,password:mysqlConfig.password})}function getSqlMysql(mysqlConfig){const mysql=undefined,sql=undefined;return getMysql(mysqlConfig).raw}exports.getKnex=getKnex,exports.getSqlKnex=getSqlKnex,exports.getTypeorm=getTypeorm,exports.getSqlTypeorm=getSqlTypeorm,exports.getMysql=getMysql,exports.getSqlMysql=getSqlMysql;class SQL extends better_sqlite3_1.default{constructor(cwd,filename){super(cwd+"/"+filename),this.cwd=cwd,this.filename=filename}runQuery(query,label=""){const results=this.prepare(query).all();return console.log(label,"\n",results,"\n"),results}runFile(filename,cwd=this.cwd){const SQLcommands=fs_1.default.readFileSync(cwd+"/"+filename);this.exec(SQLcommands.toString())}}exports.default=SQL;