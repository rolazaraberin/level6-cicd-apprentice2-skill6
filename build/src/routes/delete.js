"use strict";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]]);return t},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const knexfile_1=__importDefault(require("../../knexfile")),knex_1=__importDefault(require("knex")),utilityFunctionsServer_1=require("../utilityFunctionsServer"),cartUtils_1=require("../controllers/cartUtils"),errorUtils_1=require("../utils/errorUtils"),userUtils_1=require("../controllers/userUtils"),validateUtils_1=require("../controllers/validateUtils"),knex=(0,knex_1.default)(knexfile_1.default),inventoryData=deleteData("inventory");async function manualData(request,response){try{const _a=request.body,{table:table}=_a,data=__rest(_a,["table"]),column=Object.getOwnPropertyNames(data)[0],value=data[column];await knex.table(table).where(column,"=",value).delete();const result=await knex.table(table).select();response.status(200).send(result)}catch(error){response.status(400).send(error.message)}}function deleteData(route){let mainTable;return"cart"===route&&(mainTable="cart"),"inventory"===route&&(mainTable="inventory"),async function(request,response){try{const data=(0,utilityFunctionsServer_1.getValidValues)(request.body);await knex.table(mainTable).update(data[mainTable]);const itemsTable=data[mainTable].itemsTable,itemID=data.item.itemID;await knex.table(itemsTable).where("itemID","=",itemID).delete();const result={};result[mainTable]=await knex.table(mainTable).select(),result[itemsTable]=await knex.table(itemsTable).select(),response.status(200).send(result)}catch(error){response.status(400).send(error.message)}}}async function cartData(request,response){try{const validValues=(0,utilityFunctionsServer_1.getValidValues)(request.body),cart=validValues.cart,item=validValues.item,user=validValues.user;(0,validateUtils_1.validateCart)(cart),(0,validateUtils_1.validateItem)(item),cart.id=await(0,userUtils_1.getCartId)(user),cart.itemsTable=await(0,cartUtils_1.getItemsTable)(cart);const result=await(0,cartUtils_1.removeItemFromCart)(cart,item);response.status(200).send(result)}catch(asyncError){const{error:error,message:message,code:code}=await(0,errorUtils_1.handleAsyncError)(asyncError);response.status(code).send(message)}}exports.default={manualData:manualData,cartData:cartData,inventoryData:inventoryData};