"use strict";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]]);return t},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const knexfile_1=__importDefault(require("../../knexfile")),knex_1=__importDefault(require("knex")),utilityFunctionsServer_1=require("../utilityFunctionsServer"),cartUtils_1=require("../controllers/cartUtils"),errorUtils_1=require("../utils/errorUtils"),userUtils_1=require("../controllers/userUtils"),validateUtils_1=require("../controllers/validateUtils"),knex=(0,knex_1.default)(knexfile_1.default),inventoryData=updateData("inventory");async function idKey(request,response){try{const _a=request.body,{table:table,id:id}=_a,data=__rest(_a,["table","id"]);await knex.table(table).update(data).where("id","=",id);const result=await knex.table(table).select();response.status(200).send(result)}catch(error){response.status(400).send(error.message)}}function updateData(route){let mainTable;return"cart"===route&&(mainTable="cart"),"inventory"===route&&(mainTable="inventory"),async function(request,response){try{const data=(0,utilityFunctionsServer_1.getValidValues)(request.body);await knex.table(mainTable).update(data[mainTable]);const itemsTable=data[mainTable].itemsTable,itemID=data.item.itemID;await knex.table(itemsTable).update(data.item).where("itemID","=",itemID);let result={};result[mainTable]=await knex.table(mainTable).select(),result[itemsTable]=await knex.table(itemsTable).select(),response.status(200).send(result)}catch(error){response.status(400).send(error.message)}}}async function cartData(request,response){var _a,_b;try{const validValues=(0,utilityFunctionsServer_1.getValidValues)(request.body),user=validValues.user,cart=validValues.cart;let result;(0,validateUtils_1.validateCart)(cart),cart.id=await(0,userUtils_1.getCartId)(user),cart.itemsTable=await(0,cartUtils_1.getItemsTable)(cart);const item=validValues.item,items=null===(_b=null===(_a=null==request?void 0:request.body)||void 0===_a?void 0:_a.cart)||void 0===_b?void 0:_b.items;item?result=await(0,cartUtils_1.updateCart)(cart,item):items&&(result=await(0,cartUtils_1.setCart)(cart,items)),response.status(200).send(result)}catch(asyncError){const{error:error,message:message,code:code}=await(0,errorUtils_1.handleAsyncError)(asyncError);response.status(code).send(message)}}exports.default={idKey:idKey,cartData:cartData,inventoryData:inventoryData,updateData:updateData};