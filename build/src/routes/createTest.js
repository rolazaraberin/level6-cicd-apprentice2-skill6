"use strict";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]]);return t},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const knexfile_1=__importDefault(require("../../knexfile")),knex_1=__importDefault(require("knex")),utilityFunctionsServer_1=require("../utilityFunctionsServer"),cartUtils_1=require("../controllers/cartUtils");exports.default={manualData:manualData,cartData:cartData};const knex=(0,knex_1.default)(knexfile_1.default);async function cartData(request,response,next){try{const validValues=(0,utilityFunctionsServer_1.getValidValues)(request.body),cart=validValues.cart;if(!cart)return next();const table="cart";try{await knex.table(table).insert(cart)}catch(dataAlreadyExists){await knex.table(table).update(cart)}const item=validValues.item,itemsTable=(await(0,cartUtils_1.getCartById)(cart.id)).itemsTable;try{await knex.table(itemsTable).insert(item)}catch(dataAlreadyExists){await knex.table(itemsTable).update(item)}const result=await(0,cartUtils_1.getCartById)(cart.id);response.status(200).send(result)}catch(error){response.status(400).send(error.message)}}async function manualData(request,response){try{const _a=request.body,{table:table}=_a,data=__rest(_a,["table"]);await knex.insert(data).table(table);const result=await knex.table(table).select();response.status(200).send(result)}catch(error){response.status(400).send(error.message)}}