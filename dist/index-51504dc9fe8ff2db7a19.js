(()=>{"use strict";var e={545:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(250),o=n(r(54)),i=n(r(998)),s=n(r(286));n(r(142)).default.config();const l=(c=process.env.mode,{cockroachdb:new a.DataSource({type:"cockroachdb",url:process.env.cockroachdb,ssl:!0,synchronize:!0,logging:!1,entities:[o.default,i.default],migrations:[s.default],subscribers:[]}),mysql:new a.DataSource({type:"mysql",host:"localhost",username:process.env.mysqlUser,password:process.env.mysqlPassword,database:process.env.mysqlDatabase,synchronize:!0,logging:!1,entities:[o.default,i.default],migrations:[s.default],subscribers:[]}),elephantsql:new a.DataSource({type:"postgres",url:process.env.elephantsql,synchronize:!0,logging:!1,entities:[o.default,i.default],migrations:[s.default],subscribers:[]})}[c]);var c;t.default=l},431:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),n(r(142)).default.config();const a=process.env.mode;console.warn("DATABASENAME",a);const o=(i=a,{development:{client:"mysql",connection:{user:process.env.devUser,password:process.env.devPassword,database:process.env.devDatabase,multipleStatements:!0},migrations:{directory:"./src/models/migrations"},seeds:{directory:"./src/models/seeds"},useNullAsDefault:!0},mysql:{client:"mysql",connection:{user:process.env.devUser,password:process.env.devPassword,database:process.env.devDatabase,multipleStatements:!0},migrations:{directory:"./src/models/migrations"},seeds:{directory:"./src/models/seeds"},useNullAsDefault:!0},sqlite:{client:"better-sqlite3",connection:{filename:"./src/models/db.sqlite"},migrations:{directory:"./src/models/migrations"},seeds:{directory:"./src/models/seeds"},useNullAsDefault:!0},elephantsql:{client:"pg",connection:{connectionString:process.env.elephantsql,ssl:{rejectUnauthorized:!1}},migrations:{directory:"./src/models/migrations"},seeds:{directory:"./src/models/seeds"},useNullAsDefault:!0,pool:{min:0,max:1}},cockroachdb:{client:"cockroachdb",connectionString:process.env.cockroachdb,connection:{connectionString:process.env.cockroachdb,ssl:{rejectUnauthorized:!1}},migrations:{directory:"./src/models/migrations"},seeds:{directory:"./src/models/seeds"},useNullAsDefault:!0,pool:{min:0,max:5}},remote:{client:"pg",connection:{connectionString:process.env.remoteURL,ssl:{rejectUnauthorized:!1}},migrations:{directory:"./src/data/migrations"},seeds:{directory:"./src/data/seeds"},useNullAsDefault:!0,pool:{min:0,max:1}}}[i]);var i;t.default=o},234:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=n(r(43)),o=n(r(142)),i=r(844),s=r(66),l={fetchInfo:async function(e,t){try{const{email:r,token:n}=e.body,a=await(0,s.getAccountByToken)(r,n);if(!a)return t.status(401).send("ERROR: Cannot retrieve account");t.status(200).send(a)}catch(e){const{error:r,message:n,code:a}=await(0,i.handleAsyncError)(e);t.status(a).send(n)}},delete:async function(e,t){try{const{email:r,password:n}=e.body;await(0,s.deleteAccountByPassword)(r,n),t.status(200).send("SUCCESS: Account deleted"),"true"!==c&&a.default.deleteConfirmation(r)}catch(e){const{error:r,message:n,code:a}=await(0,i.handleAsyncError)(e);t.status(a).send(n)}}};t.default=l,o.default.config();const c=process.env.disableEmails},66:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getAccountById=t.getAccountByToken=t.deleteAccountById=t.deleteAccountByPassword=t.createAccountByPassword=void 0;const a=r(42),o=n(r(8)),i=r(72),s=n(r(1)),l=r(628);async function c(e,t,r){await(0,a.deleteCartById)(e),await(0,i.deleteLoginByEmail)(t),await(0,l.deleteUserById)(r)}async function u(e){const t=await(0,l.getUserById)(e);return t.cart=await(0,a.getCartById)(t.cartID),t}t.createAccountByPassword=async function(e,t){const r=await(0,l.createUserByEmail)(e);await(0,i.createLoginByPassword)(e,t,r);const n=o.default.getNew(e);return await o.default.save(e,n),r.token=n,{user:r,token:n}},t.deleteAccountById=async function(e){const t=await(0,l.getUserById)(e);if(!t){const e=new Error("ERROR: invalid user id");throw e.code=s.default.error.badRequest,e}await c(t.cartID,t.email,e)},t.deleteAccountByPassword=async function(e,t){const r=await(0,l.getUserByPassword)(e,t);if(!r){const e=new Error("ERROR: incorrect password");throw e.code=s.default.error.incorrectPassword,e}await c(r.cartID,e,r.id)},t.getAccountByToken=async function(e,t){const r=await(0,l.getUserByToken)(e,t),n=await u(r.id);return n&&(n.token=t),n},t.getAccountById=u},772:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=n(r(1)),o=r(911),i=n(r(998)),s={ping:async function(e,t){try{await o.typeorm.getRepository(i.default).findOneBy({emailHash:""}),t.send("API ready")}catch(e){const r=await e;r.message="ERROR: API not ready. Try again.";const n=a.default.error.serverError;t.status(n).send(r)}}};t.default=s},863:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=n(r(1)),o=r(911),i=r(218),s=r(787),l=n(r(998)),c={cart:async function(e,t){const r=Number(null==e?void 0:e.id);if(!r||!e.itemsTable)throw new Error("ERROR: invalid cart id");if(r!==await c.token(t.email,t.token)){const e=new Error("ERROR: forbidden access to cart");throw e.code=a.default.error.forbiddenUser,e}},password:async function(e,t){var r;if(!e||!t){const e=new Error("ERROR: email and password must be provided");throw e.code=a.default.error.unauthenticated,e}const n={emailHash:(0,i.hash)(e),passwordHash:(0,i.hash)(t)},s=await o.typeorm.manager.getRepository(l.default).findOne({where:n,relations:{user:!0}}),c=null===(r=null==s?void 0:s.user)||void 0===r?void 0:r.id,u=null==s?void 0:s.token;if(!c){const e=new Error("ERROR: Incorrect email or password");throw e.code=a.default.error.unauthenticated,e}return{userID:c,token:u}},token:async function(e,t){var r;if((0,s.isEmpty)(e)||(0,s.isEmpty)(t)){const e=new Error("ERROR: incorrect email or token");throw e.code=a.default.error.unauthenticated,e}const n=(0,i.hash)(e);if(!n){const e=new Error("ERROR: Invalid email or token");throw e.code=a.default.error.unauthenticated,e}const c={emailHash:n,token:t},u=await o.typeorm.manager.getRepository(l.default).findOne({where:c,relations:{user:!0}}),d=null===(r=null==u?void 0:u.user)||void 0===r?void 0:r.id;if(!d){const e=new Error("ERROR: Invalid email or token");throw e.code=a.default.error.unauthenticated,e}return d},email:async function(e){const t=(0,i.hash)(e),r=u;await r(t)},itemsTable:async function(e){const t=e,r=u;await r(t)}};async function u(e){const t={emailHash:e},r=await o.typeorm.manager.getRepository(l.default).findOne({where:t});if((0,s.isEmpty)(r)){const e=new Error("ERROR: Account does not exist");throw e.code=a.default.error.unauthenticated,e}return"Email validated"}t.default=c},42:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.updateCart=t.setCart=t.removeItemFromCart=t.getItemsByCart=t.createCart=t.deleteCartById=t.getItemsTable=t.getCartByUser=t.getCartByToken=t.getCartById=void 0;const n=r(911),a=r(628),o=r(209),i=r(675),s=r(801);async function l(e){(0,i.validateCartId)(e);const t={id:e},r=(await n.knex.table("public.cart").select().where(t))[0];return(0,i.validateCart)(r),r.items=await u(r),r}async function c(e){const t="cartItems"+e,r=await async function(){return(await n.knex.table("public.cart").select().limit(1))[0].itemsTable}();return await n.knex.schema.createTableLike(t,r),t}async function u(e){const t=`public."${e.itemsTable}"`,r="public.item",a=`SELECT * FROM ${t} INNER JOIN ${r} ON ${t}.id = ${r}.id`;return await(0,n.sql)(a)}t.getCartById=l,t.getCartByToken=async function(e,t){const r=await(0,a.getUserByToken)(e,t);return await l(r.cartID)},t.getCartByUser=async function(e){const t=e.cartID;if(!t)throw new Error("ERROR: missing user cart information");return await l(t)},t.deleteCartById=async function(e){const t=await l(e),r=t.itemsTable;await n.knex.schema.dropTable(r);const a={id:t.id};await n.knex.table("cart").delete().where(a)},t.createCart=async function(){await n.sql.initialized();const e="cart",t=await(0,s.getNextAvailableId)(e),r={id:t,itemsTable:await c(t)};return await n.knex.table(e).insert(r),t},t.getItemsByCart=u,t.getItemsTable=async function(e){if(e.itemsTable)return e.itemsTable;const t={id:e.id};return(await n.knex.table("public.cart").select("itemsTable").where(t))[0].itemsTable},t.removeItemFromCart=async function(e,t){(0,i.validateCart)(e),(0,i.validateItem)(t);const r={id:null==e?void 0:e.id};await n.knex.table("public.cart").update(e).where(r);const a=e.itemsTable,o={id:null==t?void 0:t.id};return await n.knex.table(a).where(o).delete(),await l(null==e?void 0:e.id)},t.setCart=async function(e,t){const r={id:e.id};let a=await n.knex.table("public.cart").update(e).where(r);const i=e.itemsTable;for(let e of t){const t={id:e.id},r=(0,o.getValidValues)({item:e}).item;try{a=await n.knex.table(i).insert(r)}catch(e){a=await n.knex.table(i).update(r).where(t)}}return"SUCCESS: cart updated"},t.updateCart=async function(e,t){const r={id:e.id};await n.knex.table("cart").update(e).where(r);const a=e.itemsTable,o={id:t.id};try{await n.knex.table(a).insert(t)}catch(e){await n.knex.table(a).update(t).where(o)}return await l(e.id)}},8:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=r(787),a=r(218),o=r(911),i={invalidate:async function(e){const t={emailHash:(0,a.hash)(e)},r=await o.knex.table("login").update({token:""}).where(t),{affectedRows:n}=r;if(n||r)return n||r;throw new Error("ERROR: Invalid account")},getNew:function(e){return(0,a.hash)(e+(0,n.generateKey)())},save:async function(e,t){const r=(0,a.hash)(e),i={token:t},s={emailHash:r};return(0,n.quoteValues)([t]),(0,n.quoteValues)([r]),await o.knex.table("login").update(i).where(s)}};t.default=i},801:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getNextAvailableId=void 0;const n=r(911);t.getNextAvailableId=async function(e,t="id"){await n.sql.initialized();const r=`SELECT MAX(${t}) FROM ${e}`,a=await(0,n.sql)(r);return Number(a[0].max)+1}},346:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=n(r(863)),o=n(r(8)),i=r(844),s={withToken:async function(e,t,r){const{email:n,token:o}=e.body;if(!o)return r();try{if(!await a.default.token(n,o))return t.status(401).send("ERROR: Incorrect email or password");const e={email:n,token:o,isTemporary:!1};t.status(200).send(e)}catch(e){const{error:r,code:n,message:a}=await(0,i.handleAsyncError)(e);t.status(n).send(a)}},withPassword:async function(e,t){const{email:r,password:n}=e.body;try{const{token:e}=await a.default.password(r,n),i={email:r,token:e,isTemporary:!1};e||(i.token=o.default.getNew(r),await o.default.save(r,i.token)),t.status(200).send(i)}catch(e){const{error:r,code:n,message:a}=await(0,i.handleAsyncError)(e);t.status(n).send(a)}}};t.default=s},72:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.loginWithToken=t.loginWithPassword=t.deleteLoginByEmail=t.getUserIdByPassword=t.createLoginByPassword=void 0;const a=r(218),o=r(911),i=n(r(998)),s=r(675),l=n(r(8));t.createLoginByPassword=async function(e,t,r){(0,s.validateEmail)(e),(0,s.validatePassword)(t),(0,s.validateUser)(r,"ERROR: user is required"),(0,s.validateSignupEmailAvailable)(e),await o.typeorm.initialized();const n={emailHash:(0,a.hash)(e),passwordHash:(0,a.hash)(t),user:r},l=o.typeorm.getRepository(i.default);await l.insert(n)},t.deleteLoginByEmail=async function(e){(0,s.validateEmail)(e);const t={emailHash:(0,a.hash)(e)};return await o.typeorm.getRepository(i.default).delete(t)},t.getUserIdByPassword=async function(e,t){var r;(0,s.validateEmail)(e),(0,s.validatePassword)(t),await o.typeorm.initialized();const n={emailHash:(0,a.hash)(e),passwordHash:(0,a.hash)(t)},l=o.typeorm.getRepository(i.default),c=await l.findOne({where:n,relations:{user:!0}});return null===(r=null==c?void 0:c.user)||void 0===r?void 0:r.id},t.loginWithPassword=async function(e,t){(0,s.validateEmail)(e),(0,s.validatePassword)(t),await o.typeorm.initialized();const r={emailHash:(0,a.hash)(e),passwordHash:(0,a.hash)(t)},n=o.typeorm.getRepository(i.default),c=await n.findOne({where:r,relations:{user:!0}});let u=null==c?void 0:c.token;u||(u=l.default.getNew(e),await l.default.save(e,u));const d=null==c?void 0:c.user;if(!d)throw new Error("ERROR: invalid login");return d.token=u,{user:d,token:u}},t.loginWithToken=async function(e,t){(0,s.validateEmail)(e),(0,s.validateToken)(t);const r={emailHash:(0,a.hash)(e),token:t},n=o.typeorm.getRepository(i.default),l=await n.findOne({where:r,relations:{user:!0}}),c=null==l?void 0:l.user;if(!c)throw new Error("ERROR: invalid login");return c}},735:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=n(r(863)),o=n(r(8)),i=r(844),s={withToken:async function(e,t){try{const{email:r,token:n}=e.body;await a.default.token(r,n),await o.default.invalidate(r),t.status(200).send("SUCCESS: logged out")}catch(e){const{error:r,code:n,message:a}=await(0,i.handleAsyncError)(e);t.status(n).send(a)}}};t.default=s},43:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=n(r(139)),o=n(r(142)),i=r(844);o.default.config();const s={signupConfirmation:function(e){c(e)||l({from:"rolazaraberin.test@gmail.com",to:e,subject:"Signup Confirmation",text:`${e} has been signed up for Online Store`,html:`<p>${e} has been signed up for Online Store</p>`})},deleteConfirmation:function(e){c(e)||l({from:"rolazaraberin.test@gmail.com",to:e,subject:"Delete Confirmation",text:`${e} has been deleted from Online Store`,html:`<p>${e} has been deleted from Online Store</p>`})}};async function l(e){try{return(await a.default.send(e))[0].statusCode}catch(e){const{error:t,code:r,message:n}=await(0,i.handleAsyncError)(e);console.log(t)}}function c(e){switch(e){case"new@email.com":case"temp@email.com":case"temporary@email.com":case"correct@email.com":case"permanent@email.com":return!0}return!1}t.default=s,a.default.setApiKey(process.env.sendGridApiKey)},858:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(911),o=r(787),i=r(218),s=n(r(43)),l=n(r(998)),c=n(r(142)),u=r(66),d=r(42),f=r(844),y={withPassword:async function(e,t,r){try{const{email:r,password:n}=e.body;await async function(e){const t={emailHash:(0,i.hash)(e)},r=await a.typeorm.manager.getRepository(l.default).findOne({where:t});if((0,o.isEmpty)(r))return"Email validated";{const e=new Error("ERROR: Account already exists");throw e.code=409,e}}(r);const{user:c}=await(0,u.createAccountByPassword)(r,n),f=await(0,d.getCartByUser)(c);t.status(200).send({user:c,cart:f}),"true"!==m&&s.default.signupConfirmation(r)}catch(e){const{error:r,code:n,message:a}=await(0,f.handleAsyncError)(e);t.status(n).send(a)}}};t.default=y,c.default.config();const m=process.env.disableEmails},694:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.isSignupEmailAvailable=void 0;const a=n(r(998)),o=r(911),i=r(218),s=r(675);t.isSignupEmailAvailable=async function(e){(0,s.validateEmail)(e),await o.typeorm.initialized();const t={emailHash:(0,i.hash)(e)},r=o.typeorm.manager.getRepository(a.default);return!await r.findOneBy(t)}},628:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.deleteUserById=t.getUserByPassword=t.getUserByToken=t.getUserById=t.getCartId=t.createUserByEmail=void 0;const a=r(218),o=r(911),i=n(r(998)),s=n(r(54)),l=r(72),c=r(42),u=r(675),d=n(r(1));async function f(e){try{if(!e)throw new Error("ERROR: user id is required");let t=`SELECT * FROM public.user WHERE id = ${e}`;return(await(0,o.sql)(t))[0]}catch(e){}}async function y(e,t){(0,u.validateEmail)(e),(0,u.validateToken)(t);const r={emailHash:(0,a.hash)(e),token:t};await o.typeorm.initialized();const n=o.typeorm.getRepository(i.default),s=await n.findOne({where:r,relations:{user:!0}}),l=null==s?void 0:s.user;return(0,u.validateUser)(l),l.token=t,l}t.getCartId=async function(e){const{email:t,token:r,cartID:n}=e;if(n)return n;const a=await y(t,r);return null==a?void 0:a.cartID},t.getUserById=f,t.getUserByToken=y,t.getUserByPassword=async function(e,t){(0,u.validateEmail)(e),(0,u.validatePassword)(t);const r=await(0,l.getUserIdByPassword)(e,t);if(!r){const e=new Error("ERROR: invalid email or password");throw e.code=d.default.error.incorrectCredentials,e}return await f(r)},t.deleteUserById=async function(e){try{if(!e)throw new Error("ERROR: user id is required");return await o.typeorm.getRepository(s.default).delete(e)}catch(e){throw new Error("ERROR: must delete user cart and user login before deleting user")}},t.createUserByEmail=async function(e){(0,u.validateEmail)(e),await o.typeorm.initialized();const t=o.typeorm.getRepository(s.default),r=new s.default;r.email=e,r.cartID=await(0,c.createCart)();const n=await t.insert(r),a=Number(n.raw[0].id);return r.id=a,r}},675:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.validateUser=t.validateSignupEmailAvailable=t.validateItem=t.validateCartId=t.validateCart=t.validatePassword=t.validateToken=t.validateEmail=void 0;const a=n(r(1)),o=r(694);t.validateEmail=function(e){if(!e)throw new Error("ERROR: email is required");if("string"!=typeof e)throw new Error("ERROR: invalid email")},t.validateToken=function(e){if(!e)throw new Error("ERROR: token is required");if("string"!=typeof e)throw new Error("ERROR: invalid token")},t.validatePassword=function(e){if(!e)throw new Error("ERROR: password is required");if("string"!=typeof e)throw new Error("ERROR: invalid password")},t.validateCart=function(e){if(!e||!e.id){const e=new Error("ERROR: invalid cart");throw e.code=a.default.error.badRequest,e}},t.validateCartId=function(e){if(!e||"number"!=typeof Number(e)){const e=new Error("ERROR: invalid cart");throw e.code=a.default.error.badRequest,e}},t.validateItem=function(e){if(!e||!e.id){const e=new Error("ERROR: invalid item");throw e.code=a.default.error.badRequest,e}},t.validateSignupEmailAvailable=function(e){if(!(0,o.isSignupEmailAvailable)(e))throw new Error("ERROR: email is not available")},t.validateUser=function(e,t="ERROR: invalid user"){if(!e||!e.id){const e=new Error(t);throw e.code=a.default.error.badRequest,e}}},83:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),r(236);const a=n(r(860)),o=n(r(582)),i=n(r(919)),s=(0,a.default)(),l=process.env.PORT||8e3,c=process.env.hostEnvironment;s.use((0,o.default)({origin:"*"})),s.use(a.default.static("public")),s.use(a.default.json()),s.use("/",i.default),"lambda"!==c&&(console.log("Starting server..."),s.listen(l,(function(){console.log(`Listening on http://localhost:${l}`)}))),t.default=s},187:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(844),o=n(r(863)),i={token:async function(e,t,r){try{const{email:t,token:n}=e.body.user;return await o.default.token(t,n),r()}catch(e){const{error:r,code:n,message:o}=await(0,a.handleAsyncError)(e);t.status(n).send(o)}}};t.default=i},911:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.sql=t.typeorm=t.knex=void 0;const a=n(r(600)),o=n(r(431)),i=n(r(545)),s=new a.default;console.warn("KNEXFILE",o.default),s.configureKnex(o.default),s.configureTypeorm(i.default),s.configureSqlTypeorm();const{knex:l,typeorm:c,sql:u}=s;t.knex=l,t.typeorm=c,t.sql=u},286:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=n(r(54)),o=n(r(998));t.default=class{async up(e){const t=e.manager.getRepository(a.default),r=e.manager.getRepository(o.default);let n,i;n=new a.default,n.id=1,n.email="permanent@email.com",n.name="permanent",n.cartID=1;const s=await t.save(n);i=new o.default,i.emailHash="9f48863b648541998753fd09be67fd3d44440f51a8b1d5e9eef61d1365bbca4f",i.passwordHash="0dd1b6d5c52eec73e28b235214478c1da599a278f8d7a3216b3ce36db39f29d4",i.user=s,await r.save(i),n=new a.default,n.id=2,n.email="correct@email.com",n.name="correct",n.cartID=2;const l=await t.save(n);i=new o.default,i.emailHash="425bee187ab12fdfe19ea39148510c2a7bf5fce9957f296b90a3dc478e280b78",i.passwordHash="e231b8ff6659dcbbec5aaa6a252d132de5a8dfb8e40167c45e4eb0ffb71a7065",i.user=l,await r.save(i)}async down(e){await e.dropTable("public.login"),await e.dropTable("public.user")}}},998:function(e,t,r){var n=this&&this.__decorate||function(e,t,r,n){var a,o=arguments.length,i=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,n);else for(var s=e.length-1;s>=0;s--)(a=e[s])&&(i=(o<3?a(i):o>3?a(t,r,i):a(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const i=r(250),s=o(r(54));let l=class extends i.BaseEntity{};n([(0,i.PrimaryColumn)(),a("design:type",String)],l.prototype,"emailHash",void 0),n([(0,i.Column)(),a("design:type",String)],l.prototype,"passwordHash",void 0),n([(0,i.Column)({nullable:!0}),a("design:type",String)],l.prototype,"token",void 0),n([(0,i.OneToOne)((()=>s.default)),(0,i.JoinColumn)(),a("design:type",s.default)],l.prototype,"user",void 0),l=n([(0,i.Entity)()],l),t.default=l},54:function(e,t,r){var n=this&&this.__decorate||function(e,t,r,n){var a,o=arguments.length,i=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,n);else for(var s=e.length-1;s>=0;s--)(a=e[s])&&(i=(o<3?a(i):o>3?a(t,r,i):a(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});const o=r(250);let i=class extends o.BaseEntity{};n([(0,o.PrimaryGeneratedColumn)(),a("design:type",Number)],i.prototype,"id",void 0),n([(0,o.Column)({nullable:!0}),a("design:type",String)],i.prototype,"name",void 0),n([(0,o.Column)(),a("design:type",String)],i.prototype,"email",void 0),n([(0,o.Column)(),a("design:type",Number)],i.prototype,"cartID",void 0),i=n([(0,o.Entity)()],i),t.default=i},290:function(e,t,r){var n=this&&this.__rest||function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(n=Object.getOwnPropertySymbols(e);a<n.length;a++)t.indexOf(n[a])<0&&Object.prototype.propertyIsEnumerable.call(e,n[a])&&(r[n[a]]=e[n[a]])}return r},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=r(209),i=r(787),s=a(r(863)),l=r(911),c=function(e){let t;return t="inventory",async function(e,r){try{const n=(0,o.getValidValues)(e.body),a=n[t],c=n.item;let u=a.itemsTable;if(!u||""===u){const t=e.body.user.email;u=(0,i.hash)(t)}await s.default.itemsTable(u);try{await l.knex.table(t).insert(a)}catch(e){await l.knex.table(t).update(a)}try{await l.knex.table(u).insert(c)}catch(e){await l.knex.table(u).update(c)}let d={};d[t]=await l.knex.table(t).select(),d[u]=await l.knex.table(u).select(),r.status(200).send(d)}catch(e){r.status(400).send(e.message)}}}();t.default={manualData:async function(e,t){try{const r=e.body,{table:a}=r,o=n(r,["table"]);await l.knex.insert(o).table(a);const i=await l.knex.table(a).select();t.status(200).send(i)}catch(e){t.status(400).send(e.message)}},inventoryData:c}},647:function(e,t,r){var n=this&&this.__rest||function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(n=Object.getOwnPropertySymbols(e);a<n.length;a++)t.indexOf(n[a])<0&&Object.prototype.propertyIsEnumerable.call(e,n[a])&&(r[n[a]]=e[n[a]])}return r},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=a(r(431)),i=a(r(514)),s=r(209),l=r(42),c=r(844),u=r(628),d=r(675),f=(0,i.default)(o.default),y=function(e){let t;return t="inventory",async function(e,r){try{const n=(0,s.getValidValues)(e.body);await f.table(t).update(n[t]);const a=n[t].itemsTable,o=n.item.itemID;await f.table(a).where("itemID","=",o).delete();const i={};i[t]=await f.table(t).select(),i[a]=await f.table(a).select(),r.status(200).send(i)}catch(e){r.status(400).send(e.message)}}}();t.default={manualData:async function(e,t){try{const r=e.body,{table:a}=r,o=n(r,["table"]),i=Object.getOwnPropertyNames(o)[0],s=o[i];await f.table(a).where(i,"=",s).delete();const l=await f.table(a).select();t.status(200).send(l)}catch(e){t.status(400).send(e.message)}},cartData:async function(e,t){try{const r=(0,s.getValidValues)(e.body),n=r.cart,a=r.item,o=r.user;(0,d.validateCart)(n),(0,d.validateItem)(a),n.id=await(0,u.getCartId)(o),n.itemsTable=await(0,l.getItemsTable)(n);const i=await(0,l.removeItemFromCart)(n,a);t.status(200).send(i)}catch(e){const{error:r,message:n,code:a}=await(0,c.handleAsyncError)(e);t.status(a).send(n)}},inventoryData:y}},331:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){t.sendFile("index.html",{root:"public"})}},299:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=n(r(431)),o=n(r(514)),i=r(517),s=r(42),l=function(e){let t;return t="inventory",async function(e,r){try{const e=await c.table(t).select();let n=Object.assign({},e[0]);const a=n.itemsTable,o=await c.select().from(a).leftJoin("item",`${a}.itemID`,"item.id");n=Object.assign(Object.assign({},n),{items:o}),r.status(200).send(n)}catch(e){r.status(400).send(e)}}}();t.default={manualData:f,cartData:async function(e,t){try{const{email:r,token:n}=e.body.user,a=await(0,s.getCartByToken)(r,n);t.status(200).send(a)}catch(e){t.status(400).send(e)}},inventoryData:l,allData:async function(e,t){if((0,i.isEmpty)(e.body))try{const e=await c.select().from("item"),r=await c.select().from("inventory"),n=await c.select().from("inventoryItems"),a=await c.select().from("cart"),o=await c.select().from("cartItems"),i=JSON.stringify({item:e,inventory:r,inventoryItems:n,cart:a,cartItems:o},u,d);t.type("text"),t.status(200).send(i)}catch(e){t.status(400).send(e)}else f(e,t)}};const c=(0,o.default)(a.default),u=void 0,d=" ";async function f(e,t){try{const{table:r}=e.body,n=await c.table(r).select();t.status(200).send(n)}catch(e){t.status(400).send(e.message)}}},919:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fullUrl=t.url=t.hostUrl=void 0;const a=n(r(860)),o=n(r(331)),i=r(222),s=n(r(290)),l=n(r(299)),c=n(r(49)),u=n(r(647)),d=n(r(735)),f=n(r(858)),y=n(r(346)),m=n(r(234)),p=n(r(187)),h=n(r(772));n(r(142)).default.config(),t.hostUrl=process.env.host,t.url={baseUrl:"/",api:"/api",cart:"/api/cart",inventory:"/api/inventory",login:"/api/login",logout:"/api/logout",signup:"/api/signup",account:"/api/account",test:"/test"},t.fullUrl={host:t.hostUrl,root:t.hostUrl+t.url.baseUrl,api:t.hostUrl+t.url.api,cart:t.hostUrl+t.url.cart,inventory:t.hostUrl+t.url.inventory,login:t.hostUrl+t.url.login,logout:t.hostUrl+t.url.logout,signup:t.hostUrl+t.url.signup,account:t.hostUrl+t.url.account,test:t.hostUrl+t.url.test};const w=a.default.Router();w.post(t.url.login,y.default.withToken,y.default.withPassword),w.post(t.url.logout,d.default.withToken),w.post(t.url.signup,f.default.withPassword),w.post(t.url.account,m.default.fetchInfo),w.delete(t.url.account,m.default.delete),w.post(t.url.cart,p.default.token,l.default.cartData),w.put(t.url.cart,p.default.token,c.default.cartData),w.delete(t.url.cart,p.default.token,u.default.cartData),w.post(t.url.inventory,s.default.inventoryData),w.get(t.url.inventory,l.default.inventoryData),w.put(t.url.inventory,c.default.inventoryData),w.put(t.url.inventory,u.default.inventoryData),w.get(t.url.baseUrl,o.default),w.get(t.url.test,i.testPage),w.post(t.url.test,i.testPage),w.post(t.url.api,s.default.manualData),w.get(t.url.api,h.default.ping),w.put(t.url.api,c.default.idKey),w.delete(t.url.api,u.default.manualData),t.default=w},222:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.testPage=void 0,n(r(142)).default.config(),t.testPage=function(e,t){const r=JSON.stringify({method:e.method,mode:process.env.mode,hostEnvironment:process.env.hostEnvironment});t.send(r)}},49:function(e,t,r){var n=this&&this.__rest||function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(n=Object.getOwnPropertySymbols(e);a<n.length;a++)t.indexOf(n[a])<0&&Object.prototype.propertyIsEnumerable.call(e,n[a])&&(r[n[a]]=e[n[a]])}return r},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=a(r(431)),i=a(r(514)),s=r(209),l=r(42),c=r(844),u=r(628),d=r(675),f=(0,i.default)(o.default),y=m("inventory");function m(e){let t;return"cart"===e&&(t="cart"),"inventory"===e&&(t="inventory"),async function(e,r){try{const n=(0,s.getValidValues)(e.body);await f.table(t).update(n[t]);const a=n[t].itemsTable,o=n.item.itemID;await f.table(a).update(n.item).where("itemID","=",o);let i={};i[t]=await f.table(t).select(),i[a]=await f.table(a).select(),r.status(200).send(i)}catch(e){r.status(400).send(e.message)}}}t.default={idKey:async function(e,t){try{const r=e.body,{table:a,id:o}=r,i=n(r,["table","id"]);await f.table(a).update(i).where("id","=",o);const s=await f.table(a).select();t.status(200).send(s)}catch(e){t.status(400).send(e.message)}},cartData:async function(e,t){var r,n;try{const a=(0,s.getValidValues)(e.body),o=a.user,i=a.cart;let c;(0,d.validateCart)(i),i.id=await(0,u.getCartId)(o),i.itemsTable=await(0,l.getItemsTable)(i);const f=a.item,y=null===(n=null===(r=null==e?void 0:e.body)||void 0===r?void 0:r.cart)||void 0===n?void 0:n.items;f?c=await(0,l.updateCart)(i,f):y&&(c=await(0,l.setCart)(i,y)),t.status(200).send(c)}catch(e){const{error:r,message:n,code:a}=await(0,c.handleAsyncError)(e);t.status(a).send(n)}},inventoryData:y,updateData:m}},209:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.toUsedProperties=t.getValidValues=void 0;const n=r(787);function a(e){return function(t={},r,n,a){return void 0===r||r<0||e.includes(n)&&(t[n]=r),t}}t.getValidValues=function(e,t=r){t instanceof Array||(t=[t]);let r={};for(let o of t){const t=o.table;let i=o.properties;i instanceof Array||(i=[i]);const s=(0,n.reduce)(e[t],a(i));(0,n.isEmpty)(s)||(r[t]=s)}return(0,n.isEmpty)(r)?null:r},t.toUsedProperties=a},600:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=n(r(890)),o=n(r(744)),i=n(r(514)),s=n(r(147));t.default=class{constructor(e,t,r,n,a){this.knex=e,this.mysql=t,this.sqlite=r,this.typeorm=n,this.sql=a}configureKnex(e){if(!e)throw new Error(`ERROR: knexfile is required PROCESS ${process.env.mode}`);const t=(0,i.default)(e);this.knex=t}configureMysql(e){const t=o.default.createConnection({host:e.host,user:e.user,password:e.password});this.mysql=t}configureTypeorm(e){if(!e)throw new Error("ERROR: AppDataSource is required");this.typeorm=e,this.typeorm.initialize(),this.typeorm.initialized=async function(){return this.typeorm.isInitialized?void 0:await this.typeorm.initialize()}.bind(this)}configureSqlite(e,t){if(!e)throw new Error("ERROR: current working directory is required");if(!t)throw new Error("ERROR: filename is required");this.sqlite=new a.default(e+"/"+t),this.sqlite.cwd=e}configureSqlKnex(){if(!this.knex)throw new Error("ERROR: knex must be configured");this.sql=this.sqlKnex.bind(this)}configureSqlMysql(){if(!this.typeorm)throw new Error("ERROR: mysql must be configured");this.sql=this.sqlMysql.bind(this)}configureSqlTypeorm(){if(!this.typeorm)throw new Error("ERROR: typeorm must be configured");this.sql=this.sqlTypeorm.bind(this),this.sql.initialized=async function(){this.typeorm.isInitialized||await this.typeorm.initialize()}.bind(this)}async sqlKnex(e,t){return(await this.knex.raw(e,t))[0]}async sqlTypeorm(e,t){return await this.typeorm.query(e,t)}async sqlSqlite(e,t=""){const r=this.sqlite.prepare(e).all();return console.log(t,"\n",r,"\n"),r}async sqlSqliteFile(e,t=this.sqlite.cwd){if(!t)throw new Error("ERROR: sqlite is not configured");const r=s.default.readFileSync(t+"/"+e);this.sqlite.exec(r.toString())}async sqlMysql(e,t){return this.mysql.raw(e,t)}}},844:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.handleAsyncError=void 0;const a=n(r(1));t.handleAsyncError=async function(e){const t=await e,r=t.message;let n=t.code;return(!n||n>=600)&&(n=a.default.error.serverError),{error:t,code:n,message:r}}},1:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default={success:{created:201,general:200,ok:200},error:{badRequest:400,conflict:409,forbiddenUser:403,general:400,unauthorized:401,unauthenticated:401,incorrectPassword:401,incorrectCredentials:401,serverError:500},redirect:{general:300}}},218:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.hash=void 0;const a=n(r(113));t.hash=function(e,t="sha256"){try{return a.default.createHash(t).update(e).digest("hex")}catch(e){return}}},787:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.toCloneDeep=t.toClone=t.toFormEntries=t.toFields=t.toArrayish=t.timeout=t.temporarilyShrink=t.stringify=t.serialize=t.runCallback=t.removeFileExtension=t.removeElement=t.reduceObject=t.reduceArray=t.reduce=t.quoteValues=t.pressEnter=t.outValue=t.outProperty=t.outIndex=t.noHandler=t.matchValue=t.matchAllProperties=t.matchProperty=t.matchIndex=t.matchIsEqual=t.mapProperties=t.map=t.isURL=t.isObjectEmpty=t.isArrayEmpty=t.isEmpty=t.isChar=t.isHTMLfile=t.isDOMobjectReady=t.isUniqueValue=t.hash=t.getObjectProperties=t.getUniqueValues=t.getMultiArrayValue=t.getFormEntries=t.getCommandLineParameters=t.generateKey=t.floorOf=t.filterSort=t.find=t.convertToTextDocument=t.convertToHtmlDocument=t.combine=t.copyValuesOf=void 0;const a=r(517),o=n(r(666));async function i(e){let t=await fetch(e);return await t.text()}t.copyValuesOf=function(e,t){let r,n;for(r in e)try{n=e[r],t[r]=n}catch(e){console.log(`Couldn't copy ${r}:${n}`)}},t.combine=function(e,t){if(typeof e!=typeof t)throw Error("Cannot combine different types");return"string"==typeof e?`${e} ${t}`:e instanceof Array?[...e,...t]:"object"==typeof e?Object.assign(Object.assign({},e),t):void 0},t.removeElement=function(e,t,r){e.remove()},t.convertToHtmlDocument=async function(e){let t=await i(e),r=(new DOMParser).parseFromString(t,"text/html");return c(e)?Promise.resolve(r):Promise.reject(r)},t.convertToTextDocument=i,t.filterSort=function(e,t){return y(e,(function(e=[[],[]],r,n,a){const o=e[0],i=e[1];return t(r)?o.push(r):i.push(r),e}),[[],[]])},t.find=function(e,t,r=0){if(0!==r)throw new Error("find() startingIndex not yet implemented");e instanceof Array||(e=[e]),e.find(t)},t.floorOf=function(e,t){const r=e*t*10;return Math.trunc(r)/(10*t)};let s=0;function l(e,t,r){return r.indexOf(e)===t}function c(e){return/\.html$/.test(e)}function u(e){return e instanceof Array?d(e):e instanceof Object?f(e):null==e||""===e}function d(e){return e?0===e.length:e}function f(e){return 0===Object.keys(e).length}function y(e,t,r){return e?e instanceof Array?m(e,t,r):p(e,t,r):r}function m(e,t,r){if(!(e instanceof Array))throw new Error("An array was not passed to reduceArray()");let n=r;return e.forEach((function(e,r,a){n=t(n,e,r,a)})),0===e.length&&(n=t(n)),n}function p(e,t,r){if(e instanceof Array||"string"==typeof e||"number"==typeof e)throw new Error("An object was not passed to reduceObject()");let n=r;for(let r in e)n=t(n,e[r],r,e);return u(e)&&(n=t(n)),n}function h(e,t){const r=t;e.style.height=r.style.height,e.style.width=r.style.width}function w(e,t,r){const n={style:{height:e.style.height,width:e.style.width},offsetHeight:e.offsetHeight,offsetWidth:e.offsetWidth};return e.style.height=`${t}px`,e.style.width=`${r}px`,n}function g(e={},t,r,n){const a=t.name,o=t.value;return a&&(e[a]=o),e}t.generateKey=function(){return(new Date).getTime()+"-"+s++},t.getCommandLineParameters=function(){return process.argv.slice(2)},t.getFormEntries=function(e){return y(e.querySelectorAll("[name]"),g)},t.getMultiArrayValue=function e(t,r){if(u(t))return r;const n=t.shift();return e(t,r[n])},t.getUniqueValues=function(e){return e.filter(l)},t.getObjectProperties=function(e){let t;const r=[];for(t in e)r.push(t);return r},t.hash=function(e){try{if(!e)return;return o.default.SHA256(e).toString(o.default.enc.Hex)}catch(e){return}},t.isChar=function(e){return"string"==typeof e&&1===e.length},t.isUniqueValue=l,t.isDOMobjectReady=function e(t){if("loading"!==t.readyState)return t.removeEventListener("readystatechange",r),Promise.resolve(`${t} is ready`);function r(t){e(t.target)}t.addEventListener("readystatechange",r)},t.isHTMLfile=c,t.isEmpty=u,t.isArrayEmpty=d,t.isObjectEmpty=f,t.isURL=function(e){return/^http(s):\/\//i.test(e)},t.map=function(e,t){return e instanceof Array||(e=[e]),e.map(t)},t.mapProperties=function(e,t){if(!e)return[];const r=Object.getOwnPropertyNames(e);if(!r)return[];const n=[];return r.forEach((r=>{const a=t(e[r],r,e);n.push(a)})),n},t.matchIsEqual=function(e){return function(t,r,n){return(0,a.isEqual)(e,t)}},t.matchIndex=function(e){return function(t,r,n){return r===e}},t.matchProperty=function(e,t){return"string"==typeof e&&(e=[e]),function(r,n,a){let o=r;try{for(let t of e)o=o[t];return o===t}catch(e){return!1}}},t.matchAllProperties=function(e){return function(t,r,n){let a=!0;for(let r in e){const n=e[r];if(a=a&&t[r]===n,!a)return!1}return!0}},t.matchValue=function(e){return function(t,r,n){return t===e}},t.noHandler=function(){},t.outIndex=function(e){return function(t,r,n){return r!==e}},t.outProperty=function(e,t){return"string"==typeof e&&(e=[e]),function(r,n,a){let o=r;for(let t of e)o=o[t];return o!==t}},t.outValue=function(e){return function(t,r,n){return t!==e}},t.pressEnter=function(){return new Promise((function(e,t){process.stdin.resume(),process.stdin.once("data",(()=>(process.stdin.pause(),e())))}))},t.quoteValues=function(e){return e?e.map((e=>`"${e}"`)):e},t.serialize=function(e){const t={};for(let r in e){const n=e[r];t[r]=n}return t},t.stringify=function(e){return JSON.stringify(e,void 0," ")},t.temporarilyShrink=function(e){let t=e.parentElement,{offsetHeight:r,offsetWidth:n}=t||{};const a=w(t,r,n),o=e.offsetHeight,i=e.offsetWidth,s=w(e,o-.05*o,i-.05*i);setTimeout((function(){const r=s.offsetHeight,n=s.offsetWidth;w(e,r,n),h(e,s),h(t,a)}),100)},t.reduce=y,t.reduceArray=m,t.reduceObject=p,t.removeFileExtension=function(e){const t=e.split(".");return t.length>2&&t.pop(),t.join(".")},t.runCallback=function(e,t,r){e()},t.timeout=function(e){return new Promise((function(t){setTimeout((()=>t("Timeout complete")),e)}))},t.toArrayish=function(e={},t,r,n){return e[r]=t,e},t.toFields=function(e,t,r,n){e instanceof Array||(e=[]);const o=Object.keys(t),i=(0,a.difference)(o,e);return e.concat(i)},t.toFormEntries=g,t.toClone=function(e,t,r){return e},t.toCloneDeep=function(e,t,r){return(0,a.cloneDeep)(e)}},139:e=>{e.exports=require("@sendgrid/mail")},890:e=>{e.exports=require("better-sqlite3")},582:e=>{e.exports=require("cors")},666:e=>{e.exports=require("crypto-js")},142:e=>{e.exports=require("dotenv")},860:e=>{e.exports=require("express")},514:e=>{e.exports=require("knex")},517:e=>{e.exports=require("lodash")},744:e=>{e.exports=require("mysql")},236:e=>{e.exports=require("reflect-metadata")},250:e=>{e.exports=require("typeorm")},113:e=>{e.exports=require("crypto")},147:e=>{e.exports=require("fs")}},t={};!function r(n){var a=t[n];if(void 0!==a)return a.exports;var o=t[n]={exports:{}};return e[n].call(o.exports,o,o.exports,r),o.exports}(83)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,